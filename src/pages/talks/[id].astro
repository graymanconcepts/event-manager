---
import Layout from '../../layouts/Layout.astro';
import TalkRegistrationForm from '../../components/registration/TalkRegistrationForm';
import { API_CONFIG } from '../../utils/api/config';

export const prerender = false;

const { id } = Astro.params;

if (!id || isNaN(parseInt(id))) {
  return Astro.redirect('/talks');
}

let talk;
let speaker;

try {
  // Fetch talk details
  const talkResponse = await fetch(`${API_CONFIG.baseUrl}/api/public/talks/${parseInt(id)}`, {
    headers: API_CONFIG.defaultHeaders
  });

  if (!talkResponse.ok) {
    return Astro.redirect('/talks');
  }

  talk = await talkResponse.json();

  // Fetch speaker details
  const speakerResponse = await fetch(`${API_CONFIG.baseUrl}/api/public/speakers/${talk.speaker_id}`, {
    headers: API_CONFIG.defaultHeaders
  });

  if (!speakerResponse.ok) {
    return Astro.redirect('/talks');
  }

  speaker = await speakerResponse.json();
} catch (error) {
  console.error('Error fetching talk data:', error);
  return Astro.redirect('/talks');
}

if (!talk || !speaker) {
  return Astro.redirect('/talks');
}
---

<Layout title={talk.title}>
  <div class="max-w-4xl mx-auto px-4 py-8">
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8">
      <h1 class="text-3xl font-bold mb-4 text-gray-900 dark:text-white">{talk.title}</h1>
      
      <div class="mb-6">
        <div class="flex items-center space-x-4 mb-4">
          <img 
            src={speaker.image_url || `https://ui-avatars.com/api/?name=${encodeURIComponent(speaker.name)}&background=random`}
            alt={speaker.name}
            class="w-16 h-16 rounded-full object-cover"
          />
          <div>
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white">{speaker.name}</h2>
            <p class="text-gray-600 dark:text-gray-400">{speaker.role} at {speaker.company}</p>
          </div>
        </div>
        
        <div class="prose dark:prose-invert max-w-none">
          <p class="text-gray-700 dark:text-gray-300">{talk.description}</p>
        </div>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
        <div class="bg-gray-50 dark:bg-gray-700 p-4 rounded-lg">
          <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Schedule</h3>
          <p class="text-gray-700 dark:text-gray-300">
            {new Date(talk.start_time).toLocaleDateString('en-US', {
              weekday: 'long',
              month: 'long',
              day: 'numeric',
              hour: 'numeric',
              minute: '2-digit'
            })}
          </p>
        </div>
        
        <div class="bg-gray-50 dark:bg-gray-700 p-4 rounded-lg">
          <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Location</h3>
          <p class="text-gray-700 dark:text-gray-300">{talk.location}</p>
        </div>
      </div>
    </div>

    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <h2 class="text-2xl font-bold mb-6 text-gray-900 dark:text-white">Register for this Talk</h2>
      <TalkRegistrationForm client:load talkId={talk.id} />
    </div>
  </div>
</Layout>

<script>
  // Client-side script for form handling
  document.addEventListener('DOMContentLoaded', () => {
    console.log('Talk registration page loaded');
  });
</script>
